# Multi-stage production Dockerfile with security best practices
# use nodejs 20 alpine as base image
FROM node:22-alpine AS  builder

RUN npm install -g pnpm

WORKDIR /app

COPY package.json pnpm-lock.yaml ./

RUN pnpm install --frozen-lockfile

COPY . .

RUN pnpm run build

RUN pnpm run postbuild

FROM node:22-alpine AS production

RUN npm install -g pnpm && apk add --no-cache curl

RUN addgroup -g 1001
WORKDIR /app

COPY package.json pnpm-lock.yaml ./

RUN pnpm install --frozen-lockfile --prod

COPY --from=builder /app/dist ./dist
COPY --from=builder /app/public ./public

RUN pnpm run postbuild

RUN chown -R nestjs:nestjs /app

USER nestjs

CMD ["node", "dist/main.js"]
